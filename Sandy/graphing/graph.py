import seaborn as sb

def create_color_map(G, attrib, sb_palette='colorblind'):
    """
    Code retrieved from Networkx Youtube video at PyData2016
    """

    attributes = [G.node[label][attrib] for label in G.nodes()]

    attributes_unique = list(set(attributes))
    num_values = len(attributes_unique)

    palette = sb.color_palette(sb_palette, num_values).as_hex()

    color_map = dict(zip(attributes_unique, palette))

    node_colors = [color_map[attribute] for attribute in attributes]

    return node_colors, color_map, palette

def draw_graph(GA,attr,palette="OrRd",save=False):

    fig = plt.figure()
    layout = nx.spring_layout(GA)

    n_colors, c_map, pal = create_color_map(GA, attr, sb_palette=palette)

    nx.draw_networkx_nodes(GA,pos=layout,node_size=10,alpha=0.5,node_color=n_colors)
    nx.draw_networkx_edges(GA,pos=layout,width=1,style='dotted',edge_color='orange')
    nx.draw_networkx_labels(GA,pos=layout,font_size=4)

    plt.show()

    if save:
        fig.savefig('figure.png', format='png', dpi=1000, bbox_inches = 'tight')

    return None
