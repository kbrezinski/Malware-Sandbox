
import untangle
import pandas as pd

def untangle_file(file_name):
    obj = untangle.parse(file_name)
    return obj

def df_transform(obj_list, compress, list_type):

    column_dict = {'process':['TimeStamp','Address','Size','Path','Version','Company','Descr',
                                'ProcIdx','ProcessId','PPid','PPidx','AuthID','Create','Finish',
                                'IsVirt','Is64','Integ','Owner','ProcName','Path','cmd','Comp','Ver','Desc'],
                   'network':['depth','address','path','location','ProcIdx','TOD','ProcName','PID',
                              'PPID','DateTime','Dur','CompTime','EventCls','Oper','Detail','Seq','ImgPath',
                              'Comp','Desc','Ver','User','AuthID','Sess','cmd','TID','Path','Cat'],
                   }

    if compress:
        df = pd.DataFrame(obj_list, columns=column_dict[list_type][:5])
    else:
        df = pd.DataFrame(obj_list, columns=column_dict[list_type])

    return df

def import_proc(file_name, transform=False, compress=True):

    obj = untangle_file(file_name)
    obj_list = []

    for proc in range(len(obj.procmon.processlist.process)-1):

        try:
            for mod in obj.procmon.processlist.process[proc].children[-1].module: ## cycle through modules
                lst = []
                for elem in mod.children:
                    lst.append(elem.cdata)
                if compress:
                    lst.extend()
                else:
                    lst.extend(feat.cdata for feat in obj.procmon.processlist.process[proc].children[:-1])
                obj_list.append(lst)

        except:
            lst = [0]*7
            lst.extend(feat.cdata for feat in obj.procmon.processlist.process[proc].children[:-1])
            obj_list.append(lst)

    if transform:
        obj_list = df_transform(obj_list, compress, list_type='process')

    return obj_list

def import_event(file_name, transform=False, compress=True):

    obj = untangle_file(file_name)
    obj_list = []

    for proc in range(len(obj.procmon.eventlist.event)-1):

        try:
            for frame in obj.procmon.eventlist.event[proc].children[-1].frame: ## cycle through modules
                lst = []
                for elem in frame.children:
                    lst.append(elem.cdata)
                if compress:
                    lst.append(proc)
                else:
                    lst.extend(feat.cdata for feat in obj.procmon.eventlist.event[proc].children[:-1])
                obj_list.append(lst)
        except:
            lst = [0]*7
            lst.extend(feat.cdata for feat in obj.procmon.eventlist.event[proc].children[:-1])
            obj_list.append(lst)

    if transform:
        obj_list = df_transform(obj_list, compress, list_type='network')

    return obj_list
